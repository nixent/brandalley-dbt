version: 2

models:
  - name: customers_enriched
    description: " table with a grain of one customer per row "
    meta:
      joins:
        - join: Orders
          sql_on: ${Orders.customer_id} = ${customers_enriched.customer_id} and ${Orders.ba_site} = ${customers_enriched.ba_site}
        - join: OrderLines
          sql_on: ${OrderLines.customer_id} = ${customers_enriched.customer_id} and ${OrderLines.ba_site} = ${customers_enriched.ba_site} 
        - join: customers
          sql_on: ${OrderLines.customer_id} = ${customers.cst_id} and ${OrderLines.ba_site} = ${customers.ba_site}
    columns: 
      - name: ba_site_customer_id
        tests:
          - unique
          - not_null
        meta:
          dimension:
            format: id
          metrics:
            customers_enriched_count:
              label: 'Members'
              type: count_distinct
              description: "Count of members"
              hidden: false
            # member_customer_conversion:
            #   label: 'Members to Customers (%)'
            #   type: number
            #   sql: 'safe_divide(${Orders.new_customers},${customers.new_members})'
            #   format: 'percent'
      - name: ba_site
      - name: customer_id
        meta:
          dimension:
            format: id
      - name: signed_up_at
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
            sql: 'if(customers_enriched.ba_site = "FR",datetime(customers_enriched.signed_up_at, "Europe/Paris"),datetime(customers_enriched.signed_up_at, "Europe/London"))'
      - name: achica_user
      - name: achica_migration_date
      - name: is_existing_ifg_user
        meta:
          dimension:
            type: boolean
      - name: is_new_ifg_user
        meta:
          dimension:
            type: boolean
      - name: signup_source
      - name: signup_medium
      - name: customer_type
      - name: first_purchase_at
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
            sql: 'if(customers_enriched.ba_site = "FR",datetime(customers_enriched.first_purchase_at, "Europe/Paris"),datetime(customers_enriched.first_purchase_at, "Europe/London"))'
      - name: first_purchase_brands
        meta: 
          dimension:
            type: string
            sql: array_to_string(first_purchase_brands, ', ')
      - name: second_purchase_at
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
            sql: 'if(customers_enriched.ba_site = "FR",datetime(customers_enriched.second_purchase_at, "Europe/Paris"),datetime(customers_enriched.second_purchase_at, "Europe/London"))'
      - name: count_customer_orders
        meta: 
          dimension:
            type: number
      - name: customer_first_purchase_age_days
        meta: 
          dimension:
            type: number
      - name: first_to_second_order_interval
        meta:
          dimension:
            type: number
          metrics:
            average_first_to_second_order_interval_metric:
              label: 'Average days between first and second purchase'
              type: average
              description: "Average days between first and second purchase"
              hidden: false
              round: 0
            average_order_interval_within_90_days_metric:
              label: 'Average days between first and second purchase, when within 90 days'
              type: average
              description: "Average days between first and second purchase, when within 90 days"
              sql: "if(${first_to_second_order_interval} <= 90, ${first_to_second_order_interval}, null)"
              hidden: false
              round: 0
            average_order_interval_within_180_days_metric:
              label: 'Average days between first and second purchase, when within 180 days'
              type: average
              description: "Average days between first and second purchase, when within 180 days"
              sql: "if(${first_to_second_order_interval} <= 180, ${first_to_second_order_interval}, null)"
              hidden: false
              round: 0
            average_order_interval_within_270_days_metric:
              label: 'Average days between first and second purchase, when within 270 days'
              type: average
              description: "Average days between first and second purchase, when within 270 days"
              sql: "if(${first_to_second_order_interval} <= 270, ${first_to_second_order_interval}, null)"
              hidden: false
              round: 0
            average_order_interval_within_365_days_metric:
              label: 'Average days between first and second purchase, when within 365 days'
              type: average
              description: "Average days between first and second purchase, when within 365 days"
              sql: "if(${first_to_second_order_interval} <= 365, ${first_to_second_order_interval}, null)"
              hidden: false
            total_customers_second_order_within_90_days:
              label: 'Total number of customers who have made a second purchase within 90 days'
              type: count_distinct
              description: "Number of customers who have returned to make second order within 90 days"
              hidden: false
              sql: "if(${first_to_second_order_interval} <= 90, ${ba_site_customer_id}, null)"
            total_customers_second_order_within_180_days:
              label: 'Total number of customers who have made a second purchase within 180 days'
              type: count_distinct
              description: "Number of customers who have returned to make second order within 180 days"
              hidden: false
              sql: "if(${first_to_second_order_interval} <= 180, ${ba_site_customer_id}, null)"
            total_customers_second_order_within_270_days:
              label: 'Total number of customers who have made a second purchase within 9 months'
              type: count_distinct
              description: "Number of customers who have returned to make second order within 9 months"
              hidden: false
              sql: "if(${first_to_second_order_interval} <= 270, ${ba_site_customer_id}, null)"
            total_customers_second_order_within_1_year:
              label: 'Total number of customers who have made a second purchase within 365 days'
              type: count_distinct
              description: "Number of customers who have returned to make second order within 365 days"
              hidden: false
              sql: "if(${first_to_second_order_interval} <= 365, ${ba_site_customer_id}, null)"

  - name: customers_record_data_source
    description: ""
    columns:
      - name: ba_site_customer_id
        description: ""
        meta:
          dimension:
            format: id
          metrics:
            new_members_customers_record:
              label: 'New Members from customers_record_data_source'
              type: count_distinct
              description: "New Members from customers_record_data_source"
              hidden: false    
      - name: cst_id
        description: ""
        meta:
          dimension:
            format: id
      - name: record_data_source
        description: ""
      - name: date
        description: ""
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']

  - name: customers_rfm
    description: 'Recency, Frequency & Monetary values per customer along with the average time between transactions and average order value per customer'
    columns:
      - name: ba_site_customer_id
        tests:
          - unique 
      - name: ba_site
      - name: customer_id
      - name: days_since_last_order
      - name: lifetime_orders
      - name: lifetime_sales_amount
        meta:
          metrics:
            avg_lifetime_sales_amount:
              type: average
              label: 'Average Lifetime Sales Amount (£/€)'
              round: 1
      - name: lifetime_margin
      - name: avg_days_between_orders
      - name: lifetime_sales_amount_aov

  - name: customers
    description: "" 
    columns:
      - name: ba_site_customer_id
        description: "Concat of Customer ID and BA site - primary key"
        tests:
          - unique
          - not_null
        meta:
          metrics:
            members:
              label: 'Members'
              type: count_distinct
              description: "Number of members"
              hidden: false    
            new_members:
              label: 'New Members'
              type: count_distinct
              description: "Number of new members"
              sql: "IF(${achica_user} is null OR ${achica_user} <> 2, ${cst_id}, null)"
              hidden: false   
      - name: ba_site
      - name: cst_id
        description: "Customer ID - primary key at site level"
      - name: billing_city
        description: ""
      - name: billing_postcode
        description: ""
      - name: b_region
        description: ""
      - name: billing_country
        description: ""
      - name: shipping_city
        description: ""
      - name: shipping_postcode
        description: ""
      - name: s_region
        description: ""
      - name: s_country
        description: ""
      - name: dt_cr
        description: ""
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
            sql: 'if(customers.ba_site = "FR",datetime(customers.dt_cr, "Europe/Paris"),datetime(timestamp(customers.dt_cr), "Europe/London"))'
      - name: subscription
        description: ""
      - name: old_account_id
        description: ""
        meta:
          dimension:
            format: id
      - name: third_party
        description: ""
      - name: updated_at
        description: ""
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
      - name: achica_user
        description: ""
      - name: achica_migration_date
        description: ""
        meta:
          dimension:
            type: timestamp
            time_intervals: ['RAW', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'DAY_OF_WEEK_NAME', 'MONTH_NAME', 'QUARTER_NAME']
